{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\arif-react\\\\src\\\\Pages\\\\Dashboard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport '../../Assets/App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveToken } from '../../Redux/userToken';\nimport React, { useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst SPOTIFY_AUTHORIZE_ENDPOINT = \"https://accounts.spotify.com/authorize\";\nconst REDIRECT_URL = \"http://localhost:3000/\";\nconst SPACE_DELIMITER = \"%20\";\nconst SCOPES = [\"playlist-modify-private\", \"user-read-private\"];\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\n_c = SCOPES_URL_PARAM;\n\nfunction Dashboard() {\n  _s();\n\n  const {\n    token\n  } = useSelector(state => state.userToken);\n  const dispatch = useDispatch();\n\n  const getReturnSpotifyAuth = hash => {\n    const stringAfterHash = hash.substring(1);\n    const urlParams = stringAfterHash.split(\"&\");\n    const paramSplitUp = urlParams.reduce((accumulater, currentValue) => {\n      const [key, value] = currentValue.split(\"=\");\n      accumulater[key] = value;\n      return accumulater;\n    }, {}); // setAuthToken(paramSplitUp.access_token);\n\n    dispatch(saveToken(paramSplitUp.access_token)); // setIsAuthorize(true);\n  };\n\n  const handleLogin = () => {\n    window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`;\n  };\n\n  useEffect(() => {\n    if (window.location.hash) {\n      getReturnSpotifyAuth(window.location.hash);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [token !== \"\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/create-playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"PLAYLIST SPOTIFY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOGIN KE SPOTIFY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login Ke Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"ImadZBIQKkgdL1rW7s/VtGstnAo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SCOPES_URL_PARAM\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/arif-react/src/Pages/Dashboard/index.js"],"names":["useDispatch","useSelector","saveToken","React","useEffect","Redirect","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","SPOTIFY_AUTHORIZE_ENDPOINT","REDIRECT_URL","SPACE_DELIMITER","SCOPES","SCOPES_URL_PARAM","join","Dashboard","token","state","userToken","dispatch","getReturnSpotifyAuth","hash","stringAfterHash","substring","urlParams","split","paramSplitUp","reduce","accumulater","currentValue","key","value","access_token","handleLogin","window","location"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,QADJ,QAEO,kBAFP;;AAIA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA9B;AACA,MAAMC,0BAA0B,GAAG,wCAAnC;AACA,MAAMC,YAAY,GAAG,wBAArB;AACA,MAAMC,eAAe,GAAG,KAAxB;AACA,MAAMC,MAAM,GAAG,CAAC,yBAAD,EAA4B,mBAA5B,CAAf;AACA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,IAAP,CAAYH,eAAZ,CAAzB;KAAME,gB;;AAEN,SAASE,SAAT,GAAqB;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAYhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,oBAAoB,GAAIC,IAAD,IAAU;AACnC,UAAMC,eAAe,GAAGD,IAAI,CAACE,SAAL,CAAe,CAAf,CAAxB;AACA,UAAMC,SAAS,GAAGF,eAAe,CAACG,KAAhB,CAAsB,GAAtB,CAAlB;AACA,UAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACjE,YAAM,CAACC,GAAD,EAAMC,KAAN,IAAeF,YAAY,CAACJ,KAAb,CAAmB,GAAnB,CAArB;AACAG,MAAAA,WAAW,CAACE,GAAD,CAAX,GAAmBC,KAAnB;AACA,aAAOH,WAAP;AACH,KAJoB,EAIlB,EAJkB,CAArB,CAHmC,CAQnC;;AACAT,IAAAA,QAAQ,CAAClB,SAAS,CAACyB,YAAY,CAACM,YAAd,CAAV,CAAR,CATmC,CAUnC;AACH,GAXD;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,MAAM,CAACC,QAAP,GAAmB,GAAE1B,0BAA2B,cAAaJ,SAAU,iBAAgBK,YAAa,UAASG,gBAAiB,uCAA9H;AACH,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+B,MAAM,CAACC,QAAP,CAAgBd,IAApB,EAA0B;AACtBD,MAAAA,oBAAoB,CAACc,MAAM,CAACC,QAAP,CAAgBd,IAAjB,CAApB;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAEQL,KAAK,KAAK,EAAV,gBAAe,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAf,gBAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF3D,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEiB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GApCQlB,S;UACaf,W,EACDD,W;;;MAFZgB,S;AAsCT,eAAeA,SAAf","sourcesContent":["import '../../Assets/App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveToken } from '../../Redux/userToken';\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst SPOTIFY_AUTHORIZE_ENDPOINT = \"https://accounts.spotify.com/authorize\";\r\nconst REDIRECT_URL = \"http://localhost:3000/\";\r\nconst SPACE_DELIMITER = \"%20\";\r\nconst SCOPES = [\"playlist-modify-private\", \"user-read-private\"];\r\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\r\n\r\nfunction Dashboard() {\r\n    const { token } = useSelector((state) => state.userToken);\r\n    const dispatch = useDispatch();\r\n\r\n    const getReturnSpotifyAuth = (hash) => {\r\n        const stringAfterHash = hash.substring(1);\r\n        const urlParams = stringAfterHash.split(\"&\");\r\n        const paramSplitUp = urlParams.reduce((accumulater, currentValue) => {\r\n            const [key, value] = currentValue.split(\"=\");\r\n            accumulater[key] = value;\r\n            return accumulater;\r\n        }, {});\r\n        // setAuthToken(paramSplitUp.access_token);\r\n        dispatch(saveToken(paramSplitUp.access_token));\r\n        // setIsAuthorize(true);\r\n    };\r\n    \r\n    const handleLogin = () => {\r\n        window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (window.location.hash) {\r\n            getReturnSpotifyAuth(window.location.hash);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className='App'>\r\n            {\r\n                token !== \"\" ? <Redirect to=\"/create-playlist\"/> : <p>PLAYLIST SPOTIFY</p> \r\n            }\r\n            <h1>LOGIN KE SPOTIFY</h1>\r\n            <button onClick={handleLogin}>Login Ke Spotify</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}